{"ast":null,"code":"var _jsxFileName = \"/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Calendar/Calendar.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getWeeks = (year, month) => {\n  const result = [];\n  const firstDay = new Date(year, month - 1, 1);\n  const lastDay = new Date(year, month, 0);\n  let tracker = firstDay;\n  while (tracker.getDay() > 0) tracker.setDate(tracker.getDate() - 1);\n  let week = [];\n  while (tracker <= lastDay) {\n    week.push(new Date(tracker));\n    tracker.setDate(tracker.getDate() + 1);\n    if (week.length === 7) {\n      result.push(week);\n      week = [];\n    }\n  }\n  if (lastDay.getDay() < 6) {\n    for (let i = tracker.getDay(); i < 7; i++) {\n      week.push(new Date(tracker));\n      tracker.setDate(tracker.getDate() + 1);\n    }\n    result.push(week);\n  }\n  return result;\n};\nconst numberToMonth = month => {\n  const months = {\n    1: 'January',\n    2: 'February',\n    3: 'March',\n    4: 'April',\n    5: 'May',\n    6: 'June',\n    7: 'July',\n    8: 'August',\n    9: 'September',\n    10: 'October',\n    11: 'November',\n    12: 'December'\n  };\n  return months[month];\n};\nexport default function Calendar() {\n  _s();\n  const selectedDate = new Date();\n  const [daySelected, setDaySelected] = useState(selectedDate.getDay());\n  const [monthSelected, setMonthSelected] = useState(selectedDate.getMonth());\n  const [yearSelected, setYearSelected] = useState(selectedDate.getFullYear());\n  const handleInput = month => {\n    if (month < 0) {\n      setDaySelected(1);\n      selectedDate.setDate(1);\n      setMonthSelected(11);\n      selectedDate.setMonth(11);\n      setYearSelected(yearSelected - 1);\n      selectedDate.setFullYear(yearSelected);\n    } else if (month > 11) {\n      setDaySelected(new Date(yearSelected, monthSelected, 0).getDate());\n      selectedDate.setDate(daySelected);\n      setMonthSelected(0);\n      selectedDate.setMonth(0);\n      setYearSelected(yearSelected + 1);\n      selectedDate.setFullYear(yearSelected);\n    } else {\n      setMonthSelected(month);\n      selectedDate.setMonth(month);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              textAlign: 'left'\n            },\n            colSpan: 5,\n            children: [selectedDate.toLocaleString('default', {\n              month: 'long'\n            }), \" \", yearSelected]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 1,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleInput(monthSelected - 1),\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 1,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleInput(monthSelected + 1),\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"M\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"W\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: getWeeks(yearSelected, monthSelected + 1).map((dateRow, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: dateRow.map(day => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dateButton\",\n                children: day.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, day.getDate(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 26\n            }, this);\n          })\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"/sDsVfYjVZ6ZHbv65Yao1wGtZU4=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","getWeeks","year","month","result","firstDay","Date","lastDay","tracker","getDay","setDate","getDate","week","push","length","i","numberToMonth","months","Calendar","selectedDate","daySelected","setDaySelected","monthSelected","setMonthSelected","getMonth","yearSelected","setYearSelected","getFullYear","handleInput","setMonth","setFullYear","textAlign","toLocaleString","map","dateRow","day"],"sources":["/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Calendar/Calendar.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport './Calendar.css'\n\nconst getWeeks = (year: number, month: number): Date[][] => {\n    const result = [];\n  \n    const firstDay = new Date(year, month-1, 1);\n    const lastDay = new Date(year, month, 0);\n  \n    let tracker = firstDay;\n    \n    while (tracker.getDay() > 0)\n      tracker.setDate(tracker.getDate() - 1);\n  \n    let week = [];\n    while (tracker <= lastDay) {\n      week.push(new Date(tracker));\n      \n      tracker.setDate(tracker.getDate() + 1)\n  \n      if (week.length === 7) {\n        result.push(week);\n        week = [];\n      }\n    }\n  \n    if (lastDay.getDay() < 6) {\n      for (let i = tracker.getDay(); i < 7; i++) {\n        week.push(new Date(tracker));\n        tracker.setDate(tracker.getDate() + 1);\n      }\n      result.push(week);\n    }\n    \n    return result;\n}\n\nconst numberToMonth = (month: number): string => {\n  const months: any = {\n    1: 'January',\n    2: 'February',\n    3: 'March',\n    4: 'April',\n    5: 'May',\n    6: 'June',\n    7: 'July',\n    8: 'August',\n    9: 'September',\n    10: 'October',\n    11: 'November',\n    12: 'December'\n  };\n\n  return months[month];\n}\n\nexport default function Calendar() {\n\n  const selectedDate = new Date();\n\n  const [daySelected, setDaySelected] = useState(selectedDate.getDay());\n  const [monthSelected, setMonthSelected] = useState(selectedDate.getMonth());\n  const [yearSelected, setYearSelected] = useState(selectedDate.getFullYear());\n\n  const handleInput = (month: number): void => {\n    if (month < 0) {\n      setDaySelected(1);\n      selectedDate.setDate(1);\n      setMonthSelected(11);\n      selectedDate.setMonth(11);\n      setYearSelected(yearSelected-1);\n      selectedDate.setFullYear(yearSelected);\n    }\n    else if (month > 11) {\n      setDaySelected((new Date(yearSelected, monthSelected, 0)).getDate());\n      selectedDate.setDate(daySelected);\n      setMonthSelected(0);\n      selectedDate.setMonth(0);\n      setYearSelected(yearSelected+1);\n      selectedDate.setFullYear(yearSelected);\n    }\n    else {\n      setMonthSelected(month);\n      selectedDate.setMonth(month);\n    }\n  }\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th style={{textAlign: 'left'}} colSpan={5}>\n              {selectedDate.toLocaleString('default', {month: 'long'})} {yearSelected}\n            </th>\n            <th colSpan={1}>\n              <button onClick={() => handleInput(monthSelected-1)}>\n                &lt;\n              </button>\n            </th>\n            <th colSpan={1}>\n              <button onClick={() => handleInput(monthSelected+1)}>\n                &gt;\n              </button>\n            </th>\n          </tr>\n          <tr>\n            <th>S</th>\n            <th>M</th>\n            <th>T</th>\n            <th>W</th>\n            <th>T</th>\n            <th>F</th>\n            <th>S</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            getWeeks(yearSelected, monthSelected+1)\n            .map((dateRow: Date[], i: number): any => (\n              <tr key={i}>\n                {dateRow.map((day: Date): any => {\n                  return <td key={day.getDate()}>\n                    <button className='dateButton'>\n                      { day.getDate() }\n                    </button>\n                  </td>\n                })}\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}