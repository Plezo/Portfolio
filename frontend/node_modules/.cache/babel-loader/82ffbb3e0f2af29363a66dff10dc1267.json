{"ast":null,"code":"var _jsxFileName = \"/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Panel/Calendar.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n/* Returns an w x 7 array of dates (w = # of weeks in month) */\nconst getWeeks = (year, month) => {\n  const result = [];\n  const firstDay = new Date(year, month - 1, 1);\n  const lastDay = new Date(year, month, 0);\n  let tracker = firstDay;\n  while (tracker.getDay() > 0) tracker.setDate(tracker.getDate() - 1);\n  let week = [];\n  while (tracker <= lastDay) {\n    week.push(new Date(tracker));\n    tracker.setDate(tracker.getDate() + 1);\n    if (week.length === 7) {\n      result.push(week);\n      week = [];\n    }\n  }\n  if (lastDay.getDay() < 6) {\n    for (let i = tracker.getDay(); i < 7; i++) {\n      week.push(new Date(tracker));\n      tracker.setDate(tracker.getDate() + 1);\n    }\n    result.push(week);\n  }\n  return result;\n};\nexport default function Calendar(props) {\n  _s();\n  const defaultDate = new Date();\n  const [daySelected, setDaySelected] = useState(defaultDate.getDate());\n  const [monthSelected, setMonthSelected] = useState(defaultDate.getMonth());\n  const [yearSelected, setYearSelected] = useState(defaultDate.getFullYear());\n  useEffect(() => {\n    props.setSelectedDate(new Date(yearSelected, monthSelected, daySelected));\n  }, [daySelected, monthSelected]);\n\n  /* Updates date info any time calendar buttons are clicked */\n  const handleInput = function (month) {\n    let day = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let year = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : yearSelected;\n    if (month < 0) {\n      month = 11;\n      year -= 1;\n    } else if (month > 11) {\n      month = 0;\n      day = new Date(yearSelected, monthSelected, 0).getDate();\n      year += 1;\n    }\n    setMonthSelected(month);\n    setYearSelected(year);\n    setDaySelected(day);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"calendarTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            lineHeight: \"3rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 5,\n            children: [months[monthSelected], \" \", yearSelected]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 1,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"changeMonthButton\",\n              onClick: () => handleInput(monthSelected - 1),\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 1,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"changeMonthButton\",\n              onClick: () => handleInput(monthSelected + 1),\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"M\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"W\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: getWeeks(yearSelected, monthSelected + 1).map((dateRow, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: dateRow.map(day => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `dateButton ${day.getMonth() !== monthSelected ? 'dateButtonNotMonth' : ''} \n                        ${day.toDateString() === new Date().toDateString() ? 'dateButtonToday' : ''} \n                        ${day.getDate() === daySelected && day.getMonth() === monthSelected ? 'dateButtonSelected' : ''}\n                        `,\n                disabled: day < new Date(),\n                onClick: () => handleInput(day.getMonth(), day.getDate()),\n                children: day.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, this)\n            }, day.getDate(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 28\n            }, this);\n          })\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Calendar, \"bgNad5Ik0+s2AZ6kXVlKB5QQkAE=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","useEffect","months","getWeeks","year","month","result","firstDay","Date","lastDay","tracker","getDay","setDate","getDate","week","push","length","i","Calendar","props","defaultDate","daySelected","setDaySelected","monthSelected","setMonthSelected","getMonth","yearSelected","setYearSelected","getFullYear","setSelectedDate","handleInput","day","lineHeight","map","dateRow","toDateString"],"sources":["/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Panel/Calendar.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport './Calendar.css'\n\ninterface Props {\n    setSelectedDate: Function\n}\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n/* Returns an w x 7 array of dates (w = # of weeks in month) */\nconst getWeeks = (year: number, month: number): Date[][] => {\n    const result = [];\n  \n    const firstDay = new Date(year, month-1, 1);\n    const lastDay = new Date(year, month, 0);\n  \n    let tracker = firstDay;\n    \n    while (tracker.getDay() > 0)\n      tracker.setDate(tracker.getDate() - 1);\n  \n    let week = [];\n    while (tracker <= lastDay) {\n      week.push(new Date(tracker));\n      \n      tracker.setDate(tracker.getDate() + 1)\n  \n      if (week.length === 7) {\n        result.push(week);\n        week = [];\n      }\n    }\n  \n    if (lastDay.getDay() < 6) {\n      for (let i = tracker.getDay(); i < 7; i++) {\n        week.push(new Date(tracker));\n        tracker.setDate(tracker.getDate() + 1);\n      }\n      result.push(week);\n    }\n    \n    return result;\n}\n\nexport default function Calendar(props: Props) {\n    const defaultDate = new Date();\n\n    const [daySelected, setDaySelected] = useState(defaultDate.getDate());\n    const [monthSelected, setMonthSelected] = useState(defaultDate.getMonth());\n    const [yearSelected, setYearSelected] = useState(defaultDate.getFullYear());\n\n    useEffect(() => {\n      props.setSelectedDate(new Date(yearSelected, monthSelected, daySelected));\n    }, [daySelected, monthSelected])\n\n    /* Updates date info any time calendar buttons are clicked */\n    const handleInput = (month: number, day: number = 1, year: number = yearSelected): void => {\n        if (month < 0) {\n          month = 11;\n          year -= 1\n        }\n        else if (month > 11) {\n          month = 0;\n          day = (new Date(yearSelected, monthSelected, 0)).getDate()\n          year += 1\n        }\n        setMonthSelected(month);\n        setYearSelected(year);\n        setDaySelected(day);\n    }\n\n    return (\n    <>\n        <table className='calendarTable'>\n            <thead>\n            <tr style={{lineHeight: \"3rem\"}}>\n                <th colSpan={5}>\n                {months[monthSelected]} {yearSelected}\n                </th>\n                <th colSpan={1}>\n                <button className='changeMonthButton' onClick={() => handleInput(monthSelected-1)}>\n                    &lt;\n                </button>\n                </th>\n                <th colSpan={1}>\n                <button className='changeMonthButton' onClick={() => handleInput(monthSelected+1)}>\n                    &gt;\n                </button>\n                </th>\n            </tr>\n            <tr>\n                <th>S</th>\n                <th>M</th>\n                <th>T</th>\n                <th>W</th>\n                <th>T</th>\n                <th>F</th>\n                <th>S</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n                getWeeks(yearSelected, monthSelected+1)\n                .map((dateRow: Date[], i: number): any => (\n                <tr key={i}>\n                    {dateRow.map((day: Date): any => {\n                    return <td key={day.getDate()}>\n                        <button \n                        className={\n                        `dateButton ${day.getMonth() !== monthSelected  ? 'dateButtonNotMonth' : ''} \n                        ${day.toDateString() === (new Date()).toDateString() ? 'dateButtonToday': ''} \n                        ${(day.getDate() === daySelected && day.getMonth() === monthSelected) ? 'dateButtonSelected': ''}\n                        `\n                        }\n                        disabled={day < new Date()}\n                        onClick={() => handleInput(day.getMonth(), day.getDate())}>\n                        { day.getDate() }\n                        </button>\n                    </td>\n                    })}\n                </tr>\n                ))\n            }\n            </tbody>\n        </table>\n    </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}