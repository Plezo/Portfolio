{"ast":null,"code":"var _jsxFileName = \"/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Calendar/Calendar.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getWeeks = (year, month) => {\n  const result = [];\n  const firstDay = new Date(year, month - 1, 1);\n  const lastDay = new Date(year, month, 0);\n  let tracker = firstDay;\n  while (tracker.getDay() > 0) tracker.setDate(tracker.getDate() - 1);\n  let week = [];\n  while (tracker <= lastDay) {\n    week.push(new Date(tracker));\n    tracker.setDate(tracker.getDate() + 1);\n    if (week.length === 7) {\n      result.push(week);\n      week = [];\n    }\n  }\n  if (lastDay.getDay() < 6) {\n    for (let i = tracker.getDay(); i < 7; i++) {\n      week.push(new Date(tracker));\n      tracker.setDate(tracker.getDate() + 1);\n    }\n    result.push(week);\n  }\n  return result;\n};\nexport default function Calendar() {\n  _s();\n  const [monthSelected, setMonthSelected] = useState(new Date());\n  const [yearSelected, setYearSelected] = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"calendarMonthHeader\",\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 7,\n            children: [monthSelected.getMonth(), \" / \", yearSelected.getFullYear()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"M\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"W\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: getWeeks(monthSelected.getFullYear(), monthSelected.getMonth() + 1).map((dateRow, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"\",\n          children: dateRow.map(day => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dateButton\",\n                children: day.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 26\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"jEjjrmIvtzJPBepcBJNF3tSdz8o=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","getWeeks","year","month","result","firstDay","Date","lastDay","tracker","getDay","setDate","getDate","week","push","length","i","Calendar","monthSelected","setMonthSelected","yearSelected","setYearSelected","getMonth","getFullYear","map","dateRow","day"],"sources":["/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Calendar/Calendar.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport './Calendar.css'\n\nconst getWeeks = (year: number, month: number): Date[][] => {\n    const result = [];\n  \n    const firstDay = new Date(year, month-1, 1);\n    const lastDay = new Date(year, month, 0);\n  \n    let tracker = firstDay;\n    \n    while (tracker.getDay() > 0)\n      tracker.setDate(tracker.getDate() - 1);\n  \n    let week = [];\n    while (tracker <= lastDay) {\n      week.push(new Date(tracker));\n      \n      tracker.setDate(tracker.getDate() + 1)\n  \n      if (week.length === 7) {\n        result.push(week);\n        week = [];\n      }\n    }\n  \n    if (lastDay.getDay() < 6) {\n      for (let i = tracker.getDay(); i < 7; i++) {\n        week.push(new Date(tracker));\n        tracker.setDate(tracker.getDate() + 1);\n      }\n      result.push(week);\n    }\n    \n    return result;\n}\n\nexport default function Calendar() {\n  const [monthSelected, setMonthSelected] = useState(new Date());\n  const [yearSelected, setYearSelected] = useState(new Date());\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr className='calendarMonthHeader'>\n            <th colSpan={7}>{monthSelected.getMonth()} / {yearSelected.getFullYear()}</th>\n          </tr>\n          <tr>\n            <th>S</th>\n            <th>M</th>\n            <th>T</th>\n            <th>W</th>\n            <th>T</th>\n            <th>F</th>\n            <th>S</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            getWeeks(monthSelected.getFullYear(), monthSelected.getMonth()+1)\n            .map((dateRow: Date[], i: number): any => (\n              <tr className=''>\n                {dateRow.map((day: Date): any => {\n                  return <td>\n                    <button className='dateButton'>\n                      { day.getDate() }\n                    </button>\n                  </td>\n                })}\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}