{"ast":null,"code":"var _jsxFileName = \"/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Calendar/Calendar.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Appointment from '../Appointment/Appointment';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getWeeks = (year, month) => {\n  const result = [];\n  const firstDay = new Date(year, month - 1, 1);\n  const lastDay = new Date(year, month, 0);\n  let tracker = firstDay;\n  while (tracker.getDay() > 0) tracker.setDate(tracker.getDate() - 1);\n  let week = [];\n  while (tracker <= lastDay) {\n    week.push(new Date(tracker));\n    tracker.setDate(tracker.getDate() + 1);\n    if (week.length === 7) {\n      result.push(week);\n      week = [];\n    }\n  }\n  if (lastDay.getDay() < 6) {\n    for (let i = tracker.getDay(); i < 7; i++) {\n      week.push(new Date(tracker));\n      tracker.setDate(tracker.getDate() + 1);\n    }\n    result.push(week);\n  }\n  return result;\n};\nconst numberToMonth = month => {\n  const months = {\n    0: 'January',\n    1: 'February',\n    2: 'March',\n    3: 'April',\n    4: 'May',\n    5: 'June',\n    6: 'July',\n    7: 'August',\n    8: 'September',\n    9: 'October',\n    10: 'November',\n    11: 'December'\n  };\n  return months[month];\n};\nexport default function Calendar() {\n  _s();\n  const defaultDate = new Date();\n  const [daySelected, setDaySelected] = useState(NaN);\n  const [monthSelected, setMonthSelected] = useState(defaultDate.getMonth());\n  const [yearSelected, setYearSelected] = useState(defaultDate.getFullYear());\n  const handleInput = month => {\n    if (month < 0) {\n      setDaySelected(1);\n      setMonthSelected(11);\n      setYearSelected(yearSelected - 1);\n    } else if (month > 11) {\n      setDaySelected(new Date(yearSelected, monthSelected, 0).getDate());\n      setMonthSelected(0);\n      setYearSelected(yearSelected + 1);\n    } else {\n      setMonthSelected(month);\n    }\n    setDaySelected(NaN);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                paddingLeft: '0.5rem'\n              },\n              colSpan: 5,\n              children: [numberToMonth(monthSelected), \" \", yearSelected]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 1,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"changeMonthButton\",\n                onClick: () => handleInput(monthSelected - 1),\n                children: \"<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 1,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"changeMonthButton\",\n                onClick: () => handleInput(monthSelected + 1),\n                children: \">\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getWeeks(yearSelected, monthSelected + 1).map((dateRow, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: dateRow.map(day => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `dateButton ${day.getMonth() !== monthSelected ? 'dateButtonNotMonth' : ''} \n                        ${day.toDateString() === new Date().toDateString() ? 'dateButtonToday' : ''} \n                        ${day.getDate() === daySelected && day.getMonth() === monthSelected ? 'dateButtonSelected' : ''}\n                        `,\n                  onClick: () => {\n                    if (day.getMonth() !== monthSelected) setMonthSelected(day.getMonth());\n                    setDaySelected(day.getDate());\n                  },\n                  children: day.getDate()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this)\n              }, day.getDate(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 28\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointment\",\n      children: /*#__PURE__*/_jsxDEV(Appointment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Calendar, \"6oOjXiVCyqh3+zdjzcYZpWQYUc4=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","Appointment","getWeeks","year","month","result","firstDay","Date","lastDay","tracker","getDay","setDate","getDate","week","push","length","i","numberToMonth","months","Calendar","defaultDate","daySelected","setDaySelected","NaN","monthSelected","setMonthSelected","getMonth","yearSelected","setYearSelected","getFullYear","handleInput","paddingLeft","map","dateRow","day","toDateString"],"sources":["/Users/plezo/Documents/TypeScriptWebsite/typescript-website/src/components/Calendar/Calendar.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport Appointment from '../Appointment/Appointment'\n\nimport './Calendar.css'\n\nconst getWeeks = (year: number, month: number): Date[][] => {\n    const result = [];\n  \n    const firstDay = new Date(year, month-1, 1);\n    const lastDay = new Date(year, month, 0);\n  \n    let tracker = firstDay;\n    \n    while (tracker.getDay() > 0)\n      tracker.setDate(tracker.getDate() - 1);\n  \n    let week = [];\n    while (tracker <= lastDay) {\n      week.push(new Date(tracker));\n      \n      tracker.setDate(tracker.getDate() + 1)\n  \n      if (week.length === 7) {\n        result.push(week);\n        week = [];\n      }\n    }\n  \n    if (lastDay.getDay() < 6) {\n      for (let i = tracker.getDay(); i < 7; i++) {\n        week.push(new Date(tracker));\n        tracker.setDate(tracker.getDate() + 1);\n      }\n      result.push(week);\n    }\n    \n    return result;\n}\n\nconst numberToMonth = (month: number): string => {\n  const months: any = {\n    0: 'January',\n    1: 'February',\n    2: 'March',\n    3: 'April',\n    4: 'May',\n    5: 'June',\n    6: 'July',\n    7: 'August',\n    8: 'September',\n    9: 'October',\n    10: 'November',\n    11: 'December'\n  };\n\n  return months[month];\n}\n\nexport default function Calendar() {\n\n  const defaultDate = new Date();\n\n  const [daySelected, setDaySelected] = useState(NaN);\n  const [monthSelected, setMonthSelected] = useState(defaultDate.getMonth());\n  const [yearSelected, setYearSelected] = useState(defaultDate.getFullYear());\n\n  const handleInput = (month: number): void => {\n    if (month < 0) {\n      setDaySelected(1);\n      setMonthSelected(11);\n      setYearSelected(yearSelected-1);\n    }\n    else if (month > 11) {\n      setDaySelected((new Date(yearSelected, monthSelected, 0)).getDate());\n      setMonthSelected(0);\n      setYearSelected(yearSelected+1);\n    }\n    else {\n      setMonthSelected(month);\n    }\n    setDaySelected(NaN);\n  }\n\n  return (\n    <>\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th style={{paddingLeft: '0.5rem'}} colSpan={5}>\n                {numberToMonth(monthSelected)} {yearSelected}\n              </th>\n              <th colSpan={1}>\n                <button className='changeMonthButton' onClick={() => handleInput(monthSelected-1)}>\n                  &lt;\n                </button>\n              </th>\n              <th colSpan={1}>\n                <button className='changeMonthButton' onClick={() => handleInput(monthSelected+1)}>\n                  &gt;\n                </button>\n              </th>\n            </tr>\n            <tr>\n              <th>S</th>\n              <th>M</th>\n              <th>T</th>\n              <th>W</th>\n              <th>T</th>\n              <th>F</th>\n              <th>S</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              getWeeks(yearSelected, monthSelected+1)\n              .map((dateRow: Date[], i: number): any => (\n                <tr key={i}>\n                  {dateRow.map((day: Date): any => {\n                    return <td key={day.getDate()}>\n                      <button \n                      className={\n                        `dateButton ${day.getMonth() !== monthSelected ? 'dateButtonNotMonth' : ''} \n                        ${day.toDateString() === (new Date()).toDateString() ? 'dateButtonToday': ''} \n                        ${(day.getDate() === daySelected && day.getMonth() === monthSelected) ? 'dateButtonSelected': ''}\n                        `\n                      } \n                      onClick={() => {\n                        if (day.getMonth() !== monthSelected)\n                          setMonthSelected(day.getMonth());\n                        setDaySelected(day.getDate());\n                        }}>\n                        { day.getDate() }\n                      </button>\n                    </td>\n                  })}\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n      \n      <div className='appointment'>\n        <Appointment />\n      </div>\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}